var __spreadArrays=this&&this.__spreadArrays||function(){for(var r=0,n=0,e=arguments.length;n<e;n++)r+=arguments[n].length;for(var t=Array(r),a=0,n=0;n<e;n++)for(var c=arguments[n],o=0,i=c.length;o<i;o++,a++)t[a]=c[o];return t};import{h}from"./index-22b73bd9.js";var createProviderConsumer=function(r,n){var e=new Map;var t=r;var a=function(r,n){if(Array.isArray(r)){__spreadArrays(r).forEach((function(r){n[r]=t[r]}))}else{n[r]=Object.assign({},t)}};var c=function(r,n){if(!e.has(r)){e.set(r,n);a(n,r)}return function(){if(e.has(r)){e.delete(r)}}};var o=function(r,n){var c=r.state;t=c;e.forEach(a);return n};var i=function(r,e){return n(c,e[0])};var s=function(r,n){var t=r.prototype;var a=t.connectedCallback;var o=t.disconnectedCallback;t.connectedCallback=function(){c(this,n);if(a){return a.call(this)}};t.disconnectedCallback=function(){e.delete(this);if(o){o.call(this)}}};return{Provider:o,Consumer:i,injectProps:s}};var Tunnel=createProviderConsumer({},(function(r,n){return h("context-consumer",{subscribe:r,renderer:n})}));export{Tunnel as T};